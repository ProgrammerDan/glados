{
  "name": "configurizer",
  "version": "0.0.5",
  "description": "Simply load a config file from your projects root directory",
  "main": "index.js",
  "scripts": {
    "test": "make test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/PaperElectron/configurizer.git"
  },
  "keywords": [
    "config",
    "configuration",
    "json",
    "yaml"
  ],
  "author": {
    "name": "PaperElectron"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/PaperElectron/configurizer/issues"
  },
  "dependencies": {
    "require-yaml": "0.0.1"
  },
  "devDependencies": {
    "grunt-contrib-coffee": "~0.7.0",
    "grunt-mocha-test": "~0.7.0",
    "grunt": "~0.4.1",
    "grunt-contrib-watch": "~0.5.3",
    "mocha": "~1.13.0",
    "should": "~1.3.0",
    "coffee-script": "~1.6.3"
  },
  "readme": "#Configurizer [![Build Status](https://travis-ci.org/PaperElectron/configurizer.png?branch=master)](https://travis-ci.org/PaperElectron/configurizer)\n####only does one thing, \n####...loads a .yaml or .json file in the same directory as /node_modules.\n######not_configurizer = require(\"../../../../../some.json\")\n######configurizer = require(\"configurizer\").getVariables()\n\n##Install.\n```bash\n$ npm install configurizer --save\n\n#testing\n$ cd ./node_modules/configurizer && make test\n```\n##Require it anywhere,\nin your application you need access to your configs. Without worrying about the path.\nIt accepts some parameters on creation. By default it looks for config.yaml/json.\n\n```javascript\n  //default - loads config.yaml/json and returns an object based on your NODE_ENV variable\n  var conf = require(\"configurizer\").getVariables() \n  \n  //If you want to use a custom filename just pass it in as a string.\n  //loads myCustomFile.yaml/json and returns an object based on your NODE_ENV variable\n  var conf = require(\"configurizer\").getVariables(\"myCustomFile\") \n  \n  //If you need a custom filename AND want all of the variables in the file.\n  //loads myCustomFile.yaml/json and returns all the variables in the file\n  var conf = require(\"configurizer\").getVariables(\"myCustomFile\" , false) \n  \n  //If you want all of the variables in the file just pass in false.\n  //loads config.yaml/json and returns an object with ALL of your variables.\n  var conf = require(\"configurizer\").getVariables(false)\n```\n\n##Require it as many times as you want. \nHave some other config file you want access too? Just require it again with a distinct variable.\n```javascript\n  config = require(\"configurizer\").getVariables() //gives you ENV dependant object\n  otherConfig = require(\"configurizer\").getVariables(\"otherConfig\",false) //gives entire object\n  //you can setup a separate path if needed\n  otherConfig = require(\"configurizer\").setPath(\"../../\").getVariables(\"otherConfig\")\n```\n\n##If you need to change the path to your config file.\nRemember to start from this modules directory and work up the the root, then down to\nwherever your config is located.\n\n```javascript\n  config = require(\"configurizer\").setPath(\"../../\").getVariables()\n```\n\n##Variables to match your NODE_ENV \nyou will need a config.yaml/json with whatever NODE_ENV variables you plan on using.\n\n```bash\n#start your server in production mode and configurizer will return the production object.\n$ NODE_ENV=production node server.js\n```\n```javascript\nvar conf = require(\"configurizer\").getVariables()\nconsole.log(conf.someAPIkey)\n->\"skjhas08n3e0-\"\n```\n```yaml\n#config.yaml\n  ---\n  production:\n    siteName: \"MySite\"\n    someAPIkey: \"skjhas08n3e0-\"\n    mongodb:\n      username: \"derp\"\n      password: \"8YaMxyzUez\"\n      port: 12345\n  development:\n    siteName: \"MySite-dev\"\n    mongodb:\n      username: \"derp\"\n      password: \"hunter2\"\n      port: 12345\n  whateverYouWant:\n    siteName: \"I think I broke something\"\n    mongodb:\n      username: \"derp\"\n      password: \"\"\n      port: 12345\n```\n\n```javascript\n//I much prefer yaml, but you can use JSON if you want...\n{\n  \"production\":\n    {\n      \"siteName\": \"Communicator\",\n      \"someAPIkey\": \"skjhas08n3e0-\",\n      \"mongodb\":\n        {\n          \"username\": \"derp\",\n          \"password\": \"8YaMxyzUez\",\n          \"port\": 12345\n        }\n    },\n  \"development\":\n  {\n    \"siteName\": \"Communicator-test\",\n    \"mongodb\":\n      {\n        \"username\": \"derp\",\n        \"password\": \"hunter2\",\n        \"port\": 12345\n      }\n  },\n  \"whatEverYouWant\":\n  {\n    \"siteName\": \"I think I broke something\",\n    \"mongodb\":\n    {\n      \"username\": \"derp\",\n      \"password\": \"\",\n      \"port\": 12345\n    }\n  }\n}\n```\n",
  "readmeFilename": "README.md",
  "_id": "configurizer@0.0.5",
  "dist": {
    "shasum": "4e8f4c40b81a260e408bc3847e7f1f1d2ab2c8ea"
  },
  "_from": "configurizer@",
  "_resolved": "https://registry.npmjs.org/configurizer/-/configurizer-0.0.5.tgz"
}
